name: Studio - Master build

on:
  push:
    branches:
      - "master"
    paths-ignore:
      - 'apps/sqltools/**'

jobs:
  masterbuild:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-13-xlarge, ubuntu-20.04, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install python 3.8 (not Mac)
        if: "!startsWith(matrix.os, 'macos')"
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install python 3.8 (mac)
        if: "startsWith(matrix.os, 'macos')"
        run:
          # Install Python 3.8
          brew install python@3.8
          # Add Python 3.8 to PATH
          echo "/usr/local/opt/python@3.8/bin" >> $GITHUB_PATH

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: yarn

      - name: Clean cache
        run: yarn cache clean

      - name: Check dependencies
        run: "yarn install --frozen-lockfile --network-timeout 100000"

      - name: Build Electron app
        run: "yarn run electron:build --publish never"

      - name: Cleanup artifacts
        if: "!startsWith(matrix.os, 'windows')"
        run: |
          npx rimraf "apps/studio/dist_electron/!(*.exe|*.deb|*.rpm|*.AppImage|*.dmg|*.snap)"

      - name: Cleanup artifacts Win
        if: "startsWith(matrix.os, 'windows')"
        continue-on-error: true
        run: |
          npx rimraf "apps\studio\dist_electron\!(*.exe)"

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}
          path: apps/studio/dist_electron
